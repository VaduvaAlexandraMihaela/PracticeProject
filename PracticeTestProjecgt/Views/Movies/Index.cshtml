@model PaginatedList<PracticeTestProjecgt.Models.Movie>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by title: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index"> Back To Full List</a>
        </p>

    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
            </th>
            <th>
                Movie Title
            </th>
            <th>
                <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]">Release Date</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var pages = Model.TotalPages;
    List<int> pageNumbers = new List<int>();
    for(var i = 1; i<pages+1; i++)
    {
        pageNumbers.Add(i);
    }
}

<div>
    <ul class="pagination">
        @for (var index = 1; index <= Model.TotalPages; index++)
        {

        <li class="page-item @(index == Model.PageIndex ? "active" : "")">
            <a asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-page="/pagination" asp-route-pageNumber="@index" class="page-link">@index</a>
        </li>

            }
        </ul>
</div>


@*<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex +1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    @Model.PageIndex
</a> *@
